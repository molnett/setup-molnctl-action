name: "Molnett - Setup Molnctl"
description: "Downloads and configures molnctl"
branding:
  icon: "download-cloud"
  color: "orange"
inputs:
  version:
    description: "The version of molnctl to install, see https://github.com/molnett/molnctl/releases"
    required: false
    default: "v0.7.0"
  api-token-client-id:
    description: "Go to https://console.molnett.app/organization/settings/api-tokens to create a token"
    required: true
  api-token-client-secret:
    description: "The corresponding client secret"
    required: true
  default-tenant:
    description: "Set this tenant as default after installation"
    required: true
  default-project:
    description: "Set this project as default after installation"
    required: true
  cell:
    description: "Default cell"
    required: false
    default: "se-ume"
runs:
  using: "composite"
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=â›” error hint::Support Linux Only"
        exit 1
    - name: Install Molnctl
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
        VERSION: ${{ inputs.version }}
        MOLNETT_CLIENT_ID: ${{ inputs.api-token-client-id }}
        MOLNETT_CLIENT_SECRET: ${{ inputs.api-token-client-secret }}
        CELL: ${{ inputs.cell }}
      run: |
        gh release download --repo molnett/molnctl -p 'molnctl*' $VERSION
        chmod +x molnctl-x86_64-unknown-linux-gnu
        sudo mv molnctl-x86_64-unknown-linux-gnu /usr/bin/molnctl
        mkdir ~/.config/molnett

        MOLNETT_API_URL=https://api.$CELL.molnett.app
        MOLNETT_TOKEN=$(curl https://auth.$CELL.molnett.app/oauth2/token -X POST --data "client_id=$MOLNETT_CLIENT_ID&grant_type=client_credentials&client_secret=$MOLNETT_CLIENT_SECRET" | jq -r .access_token)

        EXPIRY=$(date -u -d "+24 hours" +"%Y-%m-%dT%H:%M:%S.%NZ")
        cat << EOF > ~/.config/molnett/config.json
        {
          "token": {
            "access_token": "$MOLNETT_TOKEN",
            "refresh_token": null,
            "expiry": "$EXPIRY"
          },
          "url": "$MOLNETT_API_URL"
        }
        EOF
        molnctl tenants list
        echo "molnctl sucessfully installed!"
    - name: Set Default Tenant
      shell: bash
      env:
        TENANT: ${{ inputs.default-tenant }}
      run: molnctl tenants switch $TENANT
    - name: Set Default Project
      shell: bash
      env:
        PROJECT: ${{ inputs.default-project }}
      run: molnctl projects switch $PROJECT
